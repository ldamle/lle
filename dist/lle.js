!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.lle=n():t.lle=n()}(this,(()=>(()=>{"use strict";var t={154:(t,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Connection=void 0;class e{constructor(t,n,e){this.in=!1,this.out=t,this.state="z",n&&(this.state="x",e&&(this.state=e),Array.isArray(n)?this.in=n:this.in=[n])}inConnect(t){return Array.isArray(this.in)?this.in.push(t):this.in=[t],this}disConnect(t){if(Array.isArray(this.in)){for(let n=0;n<this.in.length;n++)if(this.in[n].name===t.name&&this.in[n].element===t.element){this.in.splice(n,1);break}0===this.in.length&&(this.in=!1)}return this}inConnects(t){return Array.isArray(this.in)?this.in.push(...t):this.in=t,this}disConnects(t){if(Array.isArray(this.in))for(let n=0;n<t.length;n++)this.disConnect(t[n]);return this}isConnected(){return Array.isArray(this.in)&&this.in.length>0}lenInConnected(){return Array.isArray(this.in)?this.in.length:0}clone(t){return new e({name:this.out.name,element:t})}getArrayInString(){const t=[];if(Array.isArray(this.in))for(let n=0;n<this.in.length;n++)t.push(this.in[n].name);return t}findInString(t){if(Array.isArray(this.in))for(let n=0;n<this.in.length;n++)if(this.in[n].element===t)return this.in[n].name;return""}}n.Connection=e},332:(t,n,e)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Generator=n.Element=void 0;const i=e(229);class o{constructor(t,n,e,i){this.in_connections=[],this.out_connections=[],this.state=[],this.name="","string"==typeof t?(this.name=t,n instanceof o&&e instanceof o&&this.concat(n,e),n instanceof Array&&e instanceof Array&&i instanceof Array&&this.setParams(n,e,i)):(t instanceof o&&n instanceof o&&this.concat(t,n),t instanceof Array&&n instanceof Array&&e instanceof Array&&this.setParams(t,n,e))}setParams(t,n,e){for(let t=0;t<n.length;t++)this.out_connections.push(i.Factories.Connection.create({name:n[t],element:this}));return this.in_connections=t,this.state=this.genState(e),this}concat(t,n){const e=t.clone(),i=n.clone();if(e.out_connections.length<i.in_connections.length){for(let t=0;t<e.out_connections.length;t++)i.in(i.in_connections[t],e.out_connections[t]);for(let t=0;t<e.in_connections.length;t++)this.in_connections.push(e.in_connections[t]);for(let t=e.out_connections.length;t<i.in_connections.length;t++)this.in_connections.push(i.in_connections[t]);for(let t=0;t<i.out_connections.length;t++)this.out_connections.push(i.out_connections[t])}else{for(let t=0;t<i.in_connections.length;t++)i.in(i.in_connections[t],e.out_connections[t]);for(let t=0;t<i.out_connections.length;t++)this.out_connections.push(i.out_connections[t]);for(let t=i.in_connections.length;t<e.out_connections.length;t++)this.out_connections.push(e.out_connections[t]);for(let t=0;t<e.in_connections.length;t++)this.in_connections.push(e.in_connections[t])}for(let t=0;t<this.out_connections.length;t++)this.out_connections[t]=this.out_connections[t].clone(this);return this}add(t){if(this.in_connections.length<t.out_connections.length){const n=this.in_connections.length;for(let e=0;e<n;e++)this.in(this.in_connections[e],t.out_connections[e])}else for(let n=0;n<t.out_connections.length;n++)this.in(this.in_connections[n],t.out_connections[n]);return this}in(t,n){if(n){n.inConnect({name:t,element:this});for(let e=0;e<this.in_connections.length;e++)if(this.in_connections[e]===t){this.in_connections[e]=n;break}return n}for(let n=0;n<this.in_connections.length;n++)if("string"==typeof this.in_connections[n]){if(this.in_connections[n]===t)return this.in_connections[n]}else if(this.in_connections[n].findInString(this)===t)return this.in_connections[n];return""}inIndex(t){for(let n=0;n<this.in_connections.length;n++)if("string"==typeof this.in_connections[n]){if(this.in_connections[n]===t)return n}else if(this.in_connections[n].findInString(this)===t)return n;return-1}out(t){for(let n=0;n<this.out_connections.length;n++)if(this.out_connections[n].out.name===t)return this.out_connections[n];return{}}genState(t){this.state=new Array(Math.pow(2,this.in_connections.length)).fill(new Array(this.out_connections.length).fill("z"));for(let n=0;n<t.length;n++)"object"==typeof t[n]&&"in"in t[n]&&"out"in t[n]?this.genStateDetailSignal(t[n]):"object"==typeof t[n]&&"name"in t[n]&&"state"in t[n]&&"out"in t[n]?this.genStateSignal(t[n]):this.genSignal(t[n]);return this.state}genSignal(t){const n=new Array(this.out_connections.length).fill("z");for(let e=0;e<this.state.length;e++)if(JSON.stringify(this.state[e])===JSON.stringify(n)){this.state[e]=t;break}}genStateDetailSignal(t){Array.isArray(t.in)&&(t.in=t.in.join(""));const n=this.getSignalGenerateVariations(t.in);"string"==typeof t.out&&(t.out=this.genStateGenOutFromStr(t.out));for(let e=0;e<n.length;e++)this.state[parseInt(n[e],2)]=t.out}getSignalGenerateVariations(t){if(!t.includes("x"))return[t];const n=[],e=t.indexOf("x");return n.push(...this.getSignalGenerateVariations(t.slice(0,e)+"0"+t.slice(e+1))),n.push(...this.getSignalGenerateVariations(t.slice(0,e)+"1"+t.slice(e+1))),n}genStateSignal(t,n){if("else"===t.name){const n=new Array(this.out_connections.length).fill("z");for(let e=0;e<this.state.length;e++)JSON.stringify(this.state[e])===JSON.stringify(n)&&(this.state[e]=t.out);return}if("object"==typeof t.out&&"name"in t.out&&"state"in t.out&&"out"in t.out)return void(n?(n.push([this.inIndex(t.name),t.state]),this.genStateSignal(t.out,n)):this.genStateSignal(t.out,[[this.inIndex(t.name),t.state]]));const e=new Array(this.in_connections.length).fill("x");if(n)for(let t=0;t<n.length;t++)e[n[t][0]]=n[t][1];e[this.inIndex(t.name)]=t.state,this.genStateDetailSignal({in:e,out:t.out})}genStateGenOutFromStr(t){const n=[];for(let e=0;e<t.length;e++){const i=t[e],o=parseInt(i,10);isNaN(o)?n.push(i):n.push(o)}return n}clone(){const t=new o;for(let n=0;n<this.out_connections.length;n++)t.out_connections.push(this.out_connections[n].clone(t));for(let n=0;n<this.in_connections.length;n++)"string"==typeof this.in_connections[n]?t.in_connections.push(this.in_connections[n]):t.in_connections.push(this.in_connections[n].findInString(this));return t.state=[...this.state],t}isAllInConnected(){for(let t=0;t<this.in_connections.length;t++)if("string"==typeof this.in_connections[t])return!1;return!0}isAllSignalNotZ(){for(let t=0;t<this.state.length;t++)for(let n=0;n<this.state[t].length;n++)if("z"===this.state[t][n])return!1;return!0}isReady(){return this.isAllInConnected()&&this.isAllSignalNotZ()}}n.Element=o;class s{constructor(t,n){"string"==typeof t&&n?(this.frequency=n,this.out_connections=[i.Factories.Connection.create({name:t,element:this})]):(this.frequency=t,this.out_connections=[i.Factories.Connection.create({name:"",element:this})])}out(t){return t&&t!==this.out_connections[0].out.name&&(this.out_connections[0].out.name=t),this.out_connections[0]}clone(){const t=new s(this.frequency);return t.out(this.out().out.name),t}isAllInConnected(){return!1!==this.out_connections[0].in}isReady(){return this.isAllInConnected()&&""!==this.out_connections[0].out.name}}n.Generator=s},166:(t,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.ElementGraph=void 0,n.ElementGraph=class{constructor(t){this.tree=[],this.genGraph(t)}genGraph(t){const n=new Set;this.findGenerators(t,n);const e=[];for(let t=0;t<this.tree.length;t++)this.genGraphNode(this.tree[t],e)}findGenerators(t,n){if(n.add(t),void 0!==t.in_connections){for(let e=0;e<t.in_connections.length;e++)if("string"!=typeof t.in_connections[e]){const i=t.in_connections[e].out.element;n.has(i)||this.findGenerators(i,n)}for(let e=0;e<t.out_connections.length;e++)if(t.out_connections[e].in)for(let i=0;i<t.out_connections[e].in.length;i++){const o=t.out_connections[e].in[i].element;n.has(o)||this.findGenerators(o,n)}}else this.tree.push({element:t,connection:[],out:[]});return this.tree}genGraphNode(t,n){const e=t.element;for(let i=0;i<e.out_connections.length;i++)if(e.out_connections[i].in)for(let o=0;o<e.out_connections[i].in.length;o++){const s=e.out_connections[i].in[o].element,r=n.find((t=>t.element===s));if(r)r.connection.push(e.out_connections[i]),t.out.push(r);else{const o={element:s,connection:[e.out_connections[i]],out:[]};t.out.push(o),n.push(o),this.genGraphNode(o,n)}}}findElement(t){for(let n=0;n<this.tree.length;n++){const e=this.findElementNode(t,this.tree[n]);if(e)return e}return!1}findElementNode(t,n){if(t===n.element)return n;for(let e=0;e<n.out.length;e++){const i=this.findElementNode(t,n.out[e]);if(i)return i}return!1}getElementArrayFromNodeArray(t){const n=[];for(let e=0;e<t.length;e++)n.push(t[e].element);return n}getOutputs(){const t=this.getSetNodeDFS(),n=[];for(let e=0;e<t.length;e++)if(t[e].element.out_connections.length!==t[e].out.length)for(let i=0;i<t[e].element.out_connections.length;i++)t[e].element.out_connections[i].in||n.push(t[e].element.out_connections[i]);return n}getInputs(){const t=this.getSetNodeDFS(),n=[];for(let e=0;e<t.length;e++)if("in_connections"in t[e].element){const i=t[e].element.in_connections;if(i.length!==t[e].out.length)for(let o=0;o<i.length;o++)"string"==typeof i[o]&&n.push({name:i[o],element:t[e].element})}return n}getGenerators(){return this.getElementArrayFromNodeArray(this.tree)}getAllElementsDFS(){return this.getElementArrayFromNodeArray(this.getSetNodeDFS())}getAllElementsBFS(){return this.getElementArrayFromNodeArray(this.getAllNodeBFS())}getAllNodeDFS(){const t=[];for(let n=0;n<this.tree.length;n++)this.DFSrec(this.tree[n],t);return t}DFSrec(t,n){n.push(t);for(let e=0;e<t.out.length;e++)this.DFSrec(t.out[e],n)}getConnectionsNode(t){const n=[];for(let e=0;e<t.element.out_connections.length;e++)t.element.out_connections[e].in&&n.push(t.element.out_connections[e]);return n}getAllNodeBFS(){const t=[...this.tree],n=this.getSetNodeDFS(),e=[];for(;n.length>0;)for(let i=0;i<n.length;i++)if(t.find((t=>t===n[i])))n.splice(i,1),i--;else{let o=!0;for(let e=0;e<n[i].connection.length;e++)if(!t.find((t=>t.element===n[i].connection[e].out.element))){o=!1;break}o&&(t.push(n[i]),e.push(...n[i].connection),n.splice(i,1),i--)}return t}getSetNodeDFS(){return this.getAllNodeDFS().filter(((t,n,e)=>e.indexOf(t)===n))}}},229:(t,n,e)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.Factories=void 0;const i=e(154),o={Connection:new class{constructor(t){this.connectionClass=t}create(t,n){return n?new this.connectionClass(t,n):new this.connectionClass(t)}}(i.Connection)};n.Factories=o},856:function(t,n,e){var i=this&&this.__createBinding||(Object.create?function(t,n,e,i){void 0===i&&(i=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,i,o)}:function(t,n,e,i){void 0===i&&(i=e),t[i]=n[e]}),o=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,"default",{enumerable:!0,value:n})}:function(t,n){t.default=n}),s=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)"default"!==e&&Object.prototype.hasOwnProperty.call(t,e)&&i(n,t,e);return o(n,t),n};Object.defineProperty(n,"__esModule",{value:!0}),n.Types=n.ElementGraph=n.Generator=n.Element=n.Connection=void 0;const r=e(154);Object.defineProperty(n,"Connection",{enumerable:!0,get:function(){return r.Connection}});const c=e(332);Object.defineProperty(n,"Element",{enumerable:!0,get:function(){return c.Element}}),Object.defineProperty(n,"Generator",{enumerable:!0,get:function(){return c.Generator}});const h=e(166);Object.defineProperty(n,"ElementGraph",{enumerable:!0,get:function(){return h.ElementGraph}});const l=s(e(566));n.Types=l},566:(t,n)=>{Object.defineProperty(n,"__esModule",{value:!0})}},n={};return function e(i){var o=n[i];if(void 0!==o)return o.exports;var s=n[i]={exports:{}};return t[i].call(s.exports,s,s.exports,e),s.exports}(856)})()));